name: Test and Release

on:
  workflow_dispatch:
  schedule:
    - cron: '47 */160 * * *'
  release:
    types: [published]
  pull_request:
    branches:
      - master
      - v[0-9]+.[0-9]+-dev

jobs:
  test:
    name: Run SDK tests
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.6.1
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      # Temporary fix until Docker Compose V2 is GA
      - name: Set up Docker Compose V2
        run: |
          curl https://github.com/docker/compose-cli/releases/download/v2.0.0-beta.4/docker-compose-linux-amd64 --location --create-dirs -o $HOME/.docker/cli-plugins/docker-compose
          chmod +x $HOME/.docker/cli-plugins/docker-compose
          docker version
          docker info

      # Cache for dashmate and test suite
      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-

      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g

      - name: Check NPM package lock version is updated
        uses: dashevo/gh-action-check-package-lock@v1

      - name: Show NPM version
        run: npm --version

      - name: Install NPM dependencies
        run: npm ci

      - name: Load workflow dotenv file
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .github/workflows/.env

      - name: Set compatible branches for Platform components
        uses: dashevo/gh-action-platform-branches@v1
        id: platform-branches
        with:
          override-major-version: 0
          override-dashmate-branch: ${{ env.DASHMATE_BRANCH }}
          override-testsuite-branch: ${{ env.TEST_SUITE_BRANCH }}

      - name: Start Dash local network
        uses: dashevo/gh-action-start-local-network@v1
        id: start-local-network
        with:
          drive-branch: ${{ env.DRIVE_BRANCH }}
          dapi-branch: ${{ env.DAPI_BRANCH }}
          dashmate-branch: ${{ steps.platform-branches.outputs.dashmate-branch }}
          sdk-branch: ${{ steps.platform-branches.outputs.current-branch }}

      - name: Create dotenv file
        run: |
          echo "DAPI_SEED=127.0.0.1" > .env
          echo "FAUCET_PRIVATE_KEY=${{ steps.start-local-network.outputs.faucet-private-key }}" >> .env
          echo "NETWORK=regtest" >> .env
          echo "DPNS_CONTRACT_ID=${{ steps.start-local-network.outputs.dpns-contract-id }}" >> .env

      - name: Run SDK tests
        run: npm run test

      - name: Run Platform Test Suite
        uses: dashevo/gh-action-run-platform-test-suite@v1
        with:
          sdk-branch: ${{ steps.platform-branches.outputs.current-branch }}
          faucet-private-key: ${{ steps.start-local-network.outputs.faucet-private-key }}
          dpns-contract-id: ${{ steps.start-local-network.outputs.dpns-contract-id }}
          dpns-top-level-identity-id: ${{ steps.start-local-network.outputs.dpns-top-level-identity-id }}
          dpns-top-level-identity-private-key: ${{ steps.start-local-network.outputs.dpns-top-level-identity-private-key }}
          feature-flags-identity-id: ${{ steps.start-local-network.outputs.feature-flags-identity-id }}
          feature-flags-contract-id: ${{ steps.start-local-network.outputs.feature-flags-contract-id }}
          platform-test-suite-branch: ${{ steps.platform-branches.outputs.testsuite-branch }}

      - name: Show Docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v1

  release:
    name: Release NPM package
    runs-on: ubuntu-20.04
    needs: test
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Check package version matches tag
        uses: geritol/match-tag-to-package-version@0.1.0
        env:
          TAG_PREFIX: refs/tags/v

      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NPM dependencies
        run: npm ci

      - name: Set release tag
        uses: actions/github-script@v3
        id: tag
        with:
          result-encoding: string
          script: |
            const tag = context.payload.release.tag_name;
            const [, major, minor] = tag.match(/^v([0-9]+)\.([0-9]+)/);
            return (tag.includes('dev') ? `${major}.${minor}-dev` : 'latest');

      - name: Publish NPM package
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ steps.tag.outputs.result }}
